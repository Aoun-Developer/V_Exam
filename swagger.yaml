openapi: 3.0.0
info:
  title: "Virtual Examination Portal"
  version: 1.0.0
  description: "API documentation for your Node.js application"
components:
  securitySchemes: { Auth: { type: apiKey, in: header, name: Authorization } }
security:
  - { Auth: [] }
basePath: /
paths:
  /api/v1/auth/login:
    {
      get:
        {
          summary: "Get logged-in user data",
          tags: [Authentication],
          security: [{ BearerAuth: [] }],
          responses:
            {
              "200":
                {
                  description: "Successful response",
                  content:
                    {
                      application/json:
                        {
                          example:
                            {
                              _id: 603ddca3fd6e1d396055bee0,
                              name: "John Doe",
                              email: john@example.com,
                              createdAt: "2022-02-01T10:00:00.000Z",
                              updatedAt: "2022-02-01T12:00:00.000Z",
                            },
                        },
                    },
                },
              "401": { description: Unauthorized },
              "500": { description: "Internal server error" },
            },
        },
    }
  /api/v1/questions:
    {
      post:
        {
          summary: "Get all questions",
          tags: [Questions],
          security: [{ Auth: [] }],
          requestBody:
            {
              required: true,
              content: { application/json: { example: { courseType: Math } } },
            },
          responses:
            {
              "200":
                {
                  description: "Successful response",
                  content:
                    {
                      application/json: { example: { courseType: JavaScript } },
                    },
                },
              "401": { description: Unauthorized },
              "500": { description: "Internal server error" },
            },
        },
    }
  /api/v1/questions/create:
    {
      post:
        {
          summary: "Create a new question",
          tags: [Questions],
          security: [{ Auth: [] }],
          requestBody:
            {
              required: true,
              content:
                {
                  application/json:
                    {
                      example:
                        {
                          text: "What is your question?",
                          options:
                            [
                              { id: 1, text: "Option 1" },
                              { id: 2, text: "Option 2" },
                            ],
                          correctOption: [1],
                          courseType: Math,
                        },
                    },
                },
            },
          responses:
            {
              "200":
                {
                  description: "Successful response",
                  content:
                    {
                      application/json:
                        {
                          example:
                            {
                              msg: "Question inserted Successfully! in course: Math",
                            },
                        },
                    },
                },
              "400": { description: "Bad Request" },
              "500": { description: "Internal server error" },
            },
        },
    }
  /api/v1/questions/check-answers:
    {
      post:
        {
          summary: "Check user answers",
          tags: [Questions],
          security: [{ Auth: [] }],
          requestBody:
            {
              required: true,
              content:
                {
                  application/json:
                    {
                      example:
                        {
                          userResponses:
                            [
                              {
                                questionId: 65a43d1d04d35abcab3dfdd6,
                                selectedOption: [2],
                              },
                              {
                                questionId: 65a43ee404d35abcab3dfddb,
                                selectedOption: [1],
                              },
                              {
                                questionId: 65a43f6c2953168806b1ecde,
                                selectedOption: [1],
                              },
                              {
                                questionId: 65a43fe243610fb88a8f87b9,
                                selectedOption: [1],
                              },
                              {
                                questionId: 65a4408043610fb88a8f87c0,
                                selectedOption: [4],
                              },
                            ],
                          courseType: JavaScript,
                        },
                    },
                },
            },
          responses:
            {
              "200":
                {
                  description: "Successful response",
                  content:
                    {
                      application/json:
                        {
                          example:
                            {
                              Obtain: 20,
                              Total: 30,
                              percentage: 66.67%,
                              Remarks: Good!,
                            },
                        },
                    },
                },
              "400": { description: "Bad Request" },
              "500": { description: "Internal server error" },
            },
        },
    }
  /api/v1/users/signup:
    {
      post:
        {
          summary: "User SignUp",
          tags: [Users],
          requestBody:
            {
              required: true,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          type: object,
                          properties:
                            {
                              name:
                                {
                                  type: string,
                                  description: "User's full name",
                                },
                              email:
                                {
                                  type: string,
                                  format: email,
                                  description: "User's email address",
                                },
                              password:
                                {
                                  type: string,
                                  format: password,
                                  description: "User's password (at least 6 characters)",
                                },
                            },
                        },
                    },
                },
            },
          responses:
            {
              "200":
                {
                  description: "Successful signup",
                  content:
                    { application/json: { example: { token: "<JWT_TOKEN>" } } },
                },
              "400":
                {
                  description: "Bad request (validation errors)",
                  content:
                    {
                      application/json:
                        {
                          example:
                            {
                              errors:
                                [
                                  { msg: "Please enter your full name." },
                                  { msg: "Please enter your email address." },
                                  {
                                    msg: "Please insert at least 6 characters.",
                                  },
                                ],
                            },
                        },
                    },
                },
              "409":
                {
                  description: "Conflict (user already exists)",
                  content:
                    {
                      application/json:
                        { example: { msg: "User already exists" } },
                    },
                },
              "500":
                {
                  description: "Internal server error",
                  content:
                    { application/json: { example: { msg: "Server error" } } },
                },
            },
        },
    }
  /api/v1/users/login:
    {
      post:
        {
          summary: "User login",
          tags: [Users],
          requestBody:
            {
              required: true,
              content:
                {
                  application/json:
                    {
                      schema:
                        {
                          type: object,
                          properties:
                            {
                              email:
                                {
                                  type: string,
                                  format: email,
                                  description: "User's email address",
                                },
                              password:
                                {
                                  type: string,
                                  format: password,
                                  description: "User's password (at least 6 characters)",
                                },
                            },
                        },
                    },
                },
            },
          responses:
            {
              "200":
                {
                  description: "Successful login",
                  content:
                    { application/json: { example: { token: "<JWT_TOKEN>" } } },
                },
              "400":
                {
                  description: "Bad request (validation errors)",
                  content:
                    {
                      application/json:
                        {
                          example:
                            {
                              errors:
                                [
                                  { msg: "Please enter your email address." },
                                  {
                                    msg: "Please insert at least 6 characters.",
                                  },
                                ],
                            },
                        },
                    },
                },
              "409":
                {
                  description: "Bad request ( user not exists)",
                  content:
                    {
                      application/json: { example: { msg: "User Not exists" } },
                    },
                },
              "500":
                {
                  description: "Internal server error",
                  content:
                    { application/json: { example: { msg: "Server error" } } },
                },
            },
        },
    }
tags:
  - {
      name: Authentication,
      description: "User authentication and profile retrieval",
    }
  - { name: Questions, description: "API operations related to questions" }
  - { name: Users, description: "User Signup and Login" }
